#= !/bin/bash
 =
 = script to write MaGe macro files and corresponding
 = bsub instructions for each detector (active volume
 = or dead layer) starting for generic .mac and .bsub
 = template files for
                                        2nbbLV data
                                        2nbb   data

 = Author: Luigi Pertoldi - luigi.pertoldi@pd.infn.it
 = Created: 11/12/2017
 =#
using JSON

# check if everything is ok

if size(ARGS) != 0
    println("USAGE: julia create-2nbb-macros.jl [ 2nbb|2nbbLV ]")
    exit()
end
(ARGS[1] == "2nbb" || ARGS[1] == "2nbbLV") || error("Please specify the [2nbb|2nbbLV] option!")

isfile("./create-2nbb-macros.jl") || error("Please run this script from where create-2nbb-macros.jl is!")

for f in [ 
          "../gedet/intrinsic/$(ARGS[1])/log/raw-gedet-intrinsic-$(ARGS[1])-%VOL-%DET.tmac",
          "det-data/ged-mapping.json",
          "det-data/ged-parameters.json"
          ]
    isfile(f) || error("$f not found!")
end

# get dictionaries for gedet
gedMap = JSON.parsefile("det-data/ged-mapping.json")["mapping"]
gedPar = JSON.parsefile("det-data/ged-parameters.json")
# get template macro file
temLines = readlines(open("../gedet/intrinsic/$(ARGS[1])/log/raw-gedet-intrinsic-$(ARGS[1])-%VOL-%DET.tmac"))

# loop over detectors in ged-mapping file with a (key,value) pair
for (det, info) in gedMap
    # let's keep separate active and dead volume
    for VOLTYPE âˆˆ ["AV", "DV"]
        CHANNEL = info["channel"]
        VOLID = info["volume"]

        # substitute $ variables in template file
        macLines = temLines
        macLines = replace.(macLines, "\$VOLTYPE", VOLTYPE)
        macLines = replace.(macLines, "\$CHANNEL", CHANNEL) 
        VOLTYPE == "DV" && (macLines = replace.(macLines, "\$VOLUME", "CrystalDeadLayer_geometry$VOLID"))
        VOLTYPE == "AV" && (macLines = replace.(macLines, "\$VOLUME", "Crystal_geometry$VOLID"))

        # add message
        unshift!(macLines, "")
        unshift!(macLines, "#This macro was auto-generated by the create-2nbb-macros.jl script")

        writedlm(open("../gedet/intrinsic/$(ARGS[1])/log/raw-gedet-intrinsic-$(ARGS[1])-$VOLTYPE-ch$CHANNEL.mac", "w"), macLines, '\n')
        println(" created ../gedet/intrinsic/$(ARGS[1])/log/raw-gedet-intrinsic-$(ARGS[1])-$VOLTYPE-ch$CHANNEL.mac")
    end
end
