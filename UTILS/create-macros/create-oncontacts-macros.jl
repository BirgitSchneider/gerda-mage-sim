#= create-oncontacts-macros.jl
 =
 = script to write MaGe macro files for each detector
 = starting for generic .tmac template files for simulations
 = on p+ and n+ contacts using pre-sampled points (ver- files)
 =
 = Author: Luigi Pertoldi - luigi.pertoldi@pd.infn.it
 = Created: 14/12/2017
 =#
using JSON

# check if everything is ok

if size(ARGS,1) <= 1
    println("USAGE: julia create-oncontacts-macros.jl [nplus|pplus] [ISOTOPE]")
    exit()
end
(ARGS[1] == "nplus" || ARGS[1] == "pplus") || error("Please specify the [nplus|pplus] option first!")

isfile("./create-oncontacts-macros.jl") || error("Please run this script from where create-contacts-macros.jl is!")

for f in [ 
          "../../gedet/$(ARGS[1])_all/$(ARGS[2])/edep/log/raw-gedet-$(ARGS[1])_all-$(ARGS[2])-edep-%DET.tmac",
          "../det-data/ged-mapping.json",
          ]
    isfile(f) || error("$f not found!")
end

# get dictionaries for gedet
gedMap = JSON.parsefile("../det-data/ged-mapping.json")["mapping"]
# get template macro file
temLines = readlines(open("../../gedet/$(ARGS[1])_all/$(ARGS[2])/edep/log/raw-gedet-$(ARGS[1])_all-$(ARGS[2])-edep-%DET.tmac"))

# loop over detectors in ged-mapping file with a (key,value) pair
for (det, info) in gedMap
   CHANNEL = info["channel"]

   # substitute $ variables in template file
   macLines = temLines
   macLines = replace.(macLines, "\$CHANNEL", CHANNEL) 

   # add message
   unshift!(macLines, "")
   unshift!(macLines, "#This macro was auto-generated by the create-oncontacts-macros.jl script")

   writedlm(open("../../gedet/$(ARGS[1])_all/$(ARGS[2])/edep/log/raw-gedet-$(ARGS[1])_all-$(ARGS[2])-edep-ch$CHANNEL.mac", "w"), macLines, '\n')
   println(" created ../../gedet/$(ARGS[1])_all/$(ARGS[2])/edep/log/raw-gedet-$(ARGS[1])_all-$(ARGS[2])-edep-ch$CHANNEL.mac")
end
